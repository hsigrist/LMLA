project nil "Accounting Software" "1.0" 2018-03-02 +280d {
}
shift s40 "Part time shift" {
  workinghours wed, thu, fri off
}
resource hsigrist "Hans Sigrist" {
}
task accounting "Accounting Software" {
  task specification "Specification" {
    depends !milestones.start
    purge allocate
    allocate dev
    effort 480.0h
  }
  task software "Software Development" {
    depends !specification
    purge allocate
    allocate dev
    task database "Database coupling" {
      effort 480.0h
    }
    task back_end "Back-End Functions" {
      depends !database
      effort 720.0h
    }
    task graphical "Graphical User Interface" {
      depends !back_end
      purge allocate
      allocate paul, seb
      effort 840.0h
    }
  }
  task software_testing "Software testing" {
    depends !software
    purge allocate
    allocate test
    task alpha "Alpha Test" {
      effort 120.0h
    }
    task beta "Beta Test" {
      depends !alpha
      purge allocate
      allocate test, paul
      effort 480.0h
    }
  }
  task manual "Manual" {
    depends !milestones.start
    purge allocate
    allocate doc
    effort 1200.0h
  }
  task milestones "Milestones" {
    task start "Project start" {
      milestone
    }
    task technology "Technology Preview" {
      depends !!software.back_end
      milestone
    }
    task beta "Beta version" {
      depends !!software_testing.alpha
      milestone
    }
    task ship "Ship Product to Customer" {
      depends !!software_testing.beta, !!manual
      milestone
    }
  }
}
textreport report "Plan" {
  formats html
  header '== Accounting Software =='

  center -8<-
    [#Plan Plan] | [#Resource_Allocation Resource Allocation]
    ----
    === Plan ===
    <[report id="plan"]>
    ----
    === Resource Allocation ===
    <[report id="resourceGraph"]>
  ->8-
}

# A traditional Gantt chart with a project overview.
taskreport plan "" {
  headline "Project Plan"
  columns bsi, name, start, end, effort, chart
  loadunit shortauto
  hideresource 1
}

# A graph showing resource allocation. It identifies whether each
# resource is under- or over-allocated for.
resourcereport resourceGraph "" {
  headline "Resource Allocation Graph"
  columns no, name, effort, weekly
  loadunit shortauto
  hidetask ~(isleaf() & isleaf_())
  sorttasks plan.start.up
}
